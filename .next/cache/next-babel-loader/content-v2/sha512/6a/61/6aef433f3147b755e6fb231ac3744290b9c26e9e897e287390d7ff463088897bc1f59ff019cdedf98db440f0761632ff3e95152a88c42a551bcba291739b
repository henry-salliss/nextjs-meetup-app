{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Henry\\\\Documents\\\\react-notes\\\\course-projects\\\\nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport MeetingDetail from \"../../components/meetups/MeetingDetail\";\nimport Head from \"next/head\";\n\nvar MeetingDetails = function MeetingDetails(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetingDetail, {\n      image: props.meetupData.image,\n      id: props.meetupData.id,\n      address: props.meetupData.address,\n      title: props.meetupData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetingDetails;\nexport var __N_SSG = true;\nexport default MeetingDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetingDetails\");","map":{"version":3,"sources":["C:/Users/Henry/Documents/react-notes/course-projects/nextjs-meetup/pages/[meetupId]/index.js"],"names":["Fragment","MeetingDetail","Head","MeetingDetails","props","console","log","meetupData","title","description","image","id","address"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AAGA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACG,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEJ,KAAK,CAACG,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEL,KAAK,CAACG,UAAN,CAAiBG,KAD1B;AAEE,MAAA,EAAE,EAAEN,KAAK,CAACG,UAAN,CAAiBI,EAFvB;AAGE,MAAA,OAAO,EAAEP,KAAK,CAACG,UAAN,CAAiBK,OAH5B;AAIE,MAAA,KAAK,EAAER,KAAK,CAACG,UAAN,CAAiBC;AAJ1B;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAhBD;;KAAML,c;;AAwDN,eAAeA,cAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetingDetail from \"../../components/meetups/MeetingDetail\";\r\nimport { getMeetupCollection } from \"../../helpers\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\n\r\nconst MeetingDetails = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta name=\"description\" content={props.meetupData.description} />\r\n      </Head>\r\n      <MeetingDetail\r\n        image={props.meetupData.image}\r\n        id={props.meetupData.id}\r\n        address={props.meetupData.address}\r\n        title={props.meetupData.title}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  // make request to backend for all possible ids\r\n  const meetupsCollection = await getMeetupCollection();\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const params = context.params;\r\n  const meetupId = params.meetupId;\r\n\r\n  // http request\r\n  const meetupsCollection = await getMeetupCollection();\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        image: selectedMeetup.image,\r\n        address: selectedMeetup.address,\r\n        title: selectedMeetup.title,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetingDetails;\r\n"]},"metadata":{},"sourceType":"module"}