{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport MeetingDetail from \"../../components/meetups/MeetingDetail\";\nimport { getMeetupCollection } from \"../../helpers\";\nimport { ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst MeetingDetails = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.meetupData.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      })]\n    }), /*#__PURE__*/_jsx(MeetingDetail, {\n      image: props.meetupData.image,\n      id: props.meetupData.id,\n      address: props.meetupData.address,\n      title: props.meetupData.title\n    })]\n  });\n};\n\nexport const getStaticPaths = async () => {\n  // make request to backend for all possible ids\n  const meetupsCollection = await getMeetupCollection();\n  const meetups = await meetupsCollection.find().toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const params = context.params;\n  const meetupId = params.meetupId; // http request\n\n  const meetupsCollection = await getMeetupCollection();\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        title: selectedMeetup.title,\n        description: selectedMeetup.description\n      }\n    }\n  };\n};\nexport default MeetingDetails;","map":null,"metadata":{},"sourceType":"module"}