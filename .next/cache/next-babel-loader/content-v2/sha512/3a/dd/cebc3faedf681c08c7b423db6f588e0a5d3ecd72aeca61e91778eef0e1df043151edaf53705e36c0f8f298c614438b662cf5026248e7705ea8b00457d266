{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Henry\\\\Documents\\\\react-notes\\\\course-projects\\\\nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetingDetail from \"../../components/meetups/MeetingDetail\";\nimport { getMeetupCollection } from \"../../helpers\";\n\nconst MeetingDetails = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetingDetail, {\n      image: props.meetupData.image,\n      id: props.meetupData.id,\n      address: props.meetupData.address,\n      title: props.meetupData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  // make request to backend for all possible ids\n  const meetupsCollection = await getMeetupCollection();\n  const meetups = await meetupsCollection.find().toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const params = context.params;\n  const meetupId = params.meetupId; // http request\n\n  const meetupsCollection = await getMeetupCollection();\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n};\nexport default MeetingDetails;","map":{"version":3,"sources":["C:/Users/Henry/Documents/react-notes/course-projects/nextjs-meetup/pages/[meetupId]/index.js"],"names":["Fragment","MeetingDetail","getMeetupCollection","MeetingDetails","props","console","log","meetupData","image","id","address","title","getStaticPaths","meetupsCollection","meetups","find","toArray","fallback","paths","map","meetup","params","meetupId","_id","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,mBAAT,QAAoC,eAApC;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACG,UAAN,CAAiBC,KAD1B;AAEE,MAAA,EAAE,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,EAFvB;AAGE,MAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG,OAH5B;AAIE,MAAA,KAAK,EAAEN,KAAK,CAACG,UAAN,CAAiBI;AAJ1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAZD;;AAcA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AACA,QAAMC,iBAAiB,GAAG,MAAMX,mBAAmB,EAAnD;AAEA,QAAMY,OAAO,GAAG,MAAMD,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAGLC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACG,GAAP,CAAWC,QAAX;AADJ;AADsB,KAAb,CAAZ;AAHF,GAAP;AASD,CAfM;AAiBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAML,MAAM,GAAGK,OAAO,CAACL,MAAvB;AACA,QAAMC,QAAQ,GAAGD,MAAM,CAACC,QAAxB,CAF+C,CAI/C;;AACA,QAAMT,iBAAiB,GAAG,MAAMX,mBAAmB,EAAnD;AACA,QAAMyB,cAAc,GAAG,MAAMd,iBAAiB,CAACe,OAAlB,CAA0B;AAAEL,IAAAA,GAAG,EAAED;AAAP,GAA1B,CAA7B;AACA,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLG,MAAAA,UAAU,EAAEoB;AADP;AADF,GAAP;AAKD,CAZM;AAcP,eAAexB,cAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetingDetail from \"../../components/meetups/MeetingDetail\";\r\nimport { getMeetupCollection } from \"../../helpers\";\r\n\r\nconst MeetingDetails = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <Fragment>\r\n      <MeetingDetail\r\n        image={props.meetupData.image}\r\n        id={props.meetupData.id}\r\n        address={props.meetupData.address}\r\n        title={props.meetupData.title}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  // make request to backend for all possible ids\r\n  const meetupsCollection = await getMeetupCollection();\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const params = context.params;\r\n  const meetupId = params.meetupId;\r\n\r\n  // http request\r\n  const meetupsCollection = await getMeetupCollection();\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetingDetails;\r\n"]},"metadata":{},"sourceType":"module"}