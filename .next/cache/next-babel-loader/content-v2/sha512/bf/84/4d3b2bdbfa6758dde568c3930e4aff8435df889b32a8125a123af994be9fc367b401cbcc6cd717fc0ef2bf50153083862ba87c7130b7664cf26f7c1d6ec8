{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Henry\\\\Documents\\\\react-notes\\\\course-projects\\\\nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport MeetingDetail from \"../../components/meetups/MeetingDetail\";\n\nvar MeetingDetails = function MeetingDetails(props) {\n  var data = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetingDetail, {\n      image: data.image,\n      id: data.id,\n      address: data.address,\n      title: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetingDetails;\nexport var __N_SSG = true;\nexport default MeetingDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetingDetails\");","map":{"version":3,"sources":["C:/Users/Henry/Documents/react-notes/course-projects/nextjs-meetup/pages/[meetupId]/index.js"],"names":["Fragment","MeetingDetail","MeetingDetails","props","data","meetupData","image","id","address","title"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,UAAnB;AACA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAED,IAAI,CAACE,KADd;AAEE,MAAA,EAAE,EAAEF,IAAI,CAACG,EAFX;AAGE,MAAA,OAAO,EAAEH,IAAI,CAACI,OAHhB;AAIE,MAAA,KAAK,EAAEJ,IAAI,CAACK;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAZD;;KAAMP,c;;AAmDN,eAAeA,cAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetingDetail from \"../../components/meetups/MeetingDetail\";\r\nimport { getMeetupCollection } from \"../../helpers\";\r\n\r\nconst MeetingDetails = (props) => {\r\n  const data = props.meetupData;\r\n  return (\r\n    <Fragment>\r\n      <MeetingDetail\r\n        image={data.image}\r\n        id={data.id}\r\n        address={data.address}\r\n        title={data.title}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  // make request to backend for all possible ids\r\n  const meetupsCollection = await getMeetupCollection();\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const params = context.params;\r\n  console.log(params);\r\n\r\n  // http request\r\n  const meetupsCollection = await getMeetupCollection();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/Emirates_Stadium_east_side_at_dusk.jpg/450px-Emirates_Stadium_east_side_at_dusk.jpg\",\r\n        id: params.meetupId,\r\n        title: \"test meetup\",\r\n        address: \"test lane, 5, test city\",\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetingDetails;\r\n"]},"metadata":{},"sourceType":"module"}